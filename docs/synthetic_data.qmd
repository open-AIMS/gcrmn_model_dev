---
title: "Comparing model types - synthetic data"
author: "Murray Logan"
date: today
date-format: "DD/MM/YYYY"
format:
  html:
    ## Format
    theme: [default, resources/style.scss]
    css: resources/style.css
    html-math-method: mathjax
    ## Table of contents
    toc: true
    toc-float: true
    ## Numbering
    number-sections: true
    number-depth: 3
    ## Layout
    page-layout: full
    fig-caption-location: "bottom"
    fig-align: "center"
    fig-width: 4
    fig-height: 4
    fig-dpi: 72
    tbl-cap-location: top
    ## Code
    code-fold: false
    code-tools: true
    code-summary: "Show the code"
    code-line-numbers: true
    code-block-border-left: "#ccc"
    code-copy: true
    highlight-style: atom-one
    ## Execution
    execute:
      echo: true
      #cache: true
    ## Rendering
    embed-resources: true
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
  tbl-title: '**Table**'
  tbl-labels: arabic
engine: knitr
## execute: 
##   cache: true
output_dir: "docs"
documentclass: article
fontsize: 12pt
mainfont: Arial
mathfont: LiberationMono
monofont: DejaVu Sans Mono
classoption: a4paper
bibliography: resources/references.bib
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(
    cache.lazy = FALSE,
    tidy = "styler"
)
## allow indented chunks
assignInNamespace(".sep.label",
  "^\\ *(#|--)+\\s*(@knitr|----+)(.*?)-*\\s*$",
    ns = "knitr"
)
knitr::read_chunk("../R/synthetic_data.R")
```
## Purpose

This page documents the production of numerous synthetic data sets
that are to be used to compare the performances of various models that
are candidates for GCRMN. Each synthetic dataset is intended to
represent a unique modelling challenge. The following table summarises
the statistical challenge and the path of the synthetic dataset
designed to represent this issue.

| Statistical challenge                             | File path                                |
|---------------------------------------------------|------------------------------------------|
| Replacing poor sites with good sites              | `synthetic/benthos_fixed_locs_obs_1.rds` |
| Replacing poor sites with good sites (small data) | `synthetic/benthos_fixed_locs_obs_2.rds` |
| Gaps in a temporal series of some sites           | `synthetic/benthos_fixed_locs_obs_2.rds` |
| Gaps in a temporal series of all sites            | `synthetic/benthos_fixed_locs_obs_2.rds` |
| Use of covariates                                 | `synthetic/benthos_fixed_locs_obs_2.rds` |

## Preparations

The bulk of the heavy lifting is performed by the `synthos` package.
This package can be installed by issuing the following:

```{r}
#| label: install synthos
#| results: markup
#| eval: false
#| echo: true
#| cache: false
remotes::install_github("open-AIMS/synthos")
```

Load the necessary R libraries

```{r}
#| label: synthetic libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false
```

Establish the global environment and paths

```{r}
#| label: synthetic global parameters
#| results: hide
#| eval: true
#| echo: true
#| cache: false
```

## Generate synthetic landscape

1. create a list of configuration parameters

::: {.columns}
:::: {.column width="50%"}
- **seed**: a random seed to use for the stoichastic processes
- **crs**: coordinate reference system to apply to the spatial domain
- **model**: the covariate model to use. The following models are
  supported: "Sph", "Exp", "Gau", "Lin", "Mat", "Ste", "Pen", "Hug",
  "Hol", "Cor", "Sphlin", "Sphexp", "Sphgaus", "Sphmat", "Sphste",
  "Sphpen", "Sphhug", "Sphhol", "Sphcor"
- **psill**: partial sill represents the variance explained by the spatial
  structure. It is the difference between the total sill (the
  asymptotic value of the variogram) and the _nugget_.In a variogram,
  the _psill_ is the plateau value that the variogram reaches as the
  distance increases.
- **range**: the distance at which spatial correlation becomes negligible.
  Beyond this distance, the variogram reaches the sill, and points are
  considered spatially uncorrelated. It defines the spatial extent of
  the influence of one location on another.
- **nugget**: represents the variance at zero distance (the y-intercept of
  the variogram). It accounts for measurement error or spatial
  variability at scales smaller than the sampling resolution. A
  nonzero _nugget_ indicates that there is variability that cannot be
  explained by the spatial model.
- **alpha**: controls the smoothness of the spatial field.
  Larger values of ~alpha~ result in smoother spatial fields, while
  smaller values allow for rougher fields. In the context of SPDEs,
  _alpha_ is related to the order of the differential operator used to
  define the spatial process.
::::

:::: {.column width="50%"}
- **kappa**: controls the spatial scale or range of the spatial
  process. It determines how quickly spatial correlation decays with
  distance. Smaller values of _kappa_ correspond to larger spatial
  ranges (more extended correlation), while larger values correspond
  to shorter spatial ranges (localized correlation). In SPDE-based
  models, _kappa_ is used to parameterize the precision matrix
  of the spatial field.
- **variance**: is used to calculate the precision of the Mat√©rn 
- **patch_threshold**: patch_threshold: a numeric representing the
  threshold below which the field is masked away to leave only the
  patches
- **reef_width**: representing half the width of a ribbon representing
  the reef that is centered on the outline of the patch
- **years**: a sequence of years
- **dhw_weight**: relative importance of degree heating weeks (how
  much to weight the effects of dhw when calculating cover)
- **cyc_weight**: relative importance of cyclones (how much to weight
  the effects of cyclones when calculating cover)
- **other_weight**: relative importance of other disturbances (how
  much to weight the effects of other disturbances when calculating
  cover) 
- **hcc_cover_range**: the range of Hard Coral Cover to be observed
  over space and time
- **hcc_growth**: the annual rate of growth of hard coral
- **sc_cover_range**: the range of Soft Coral Cover to be observed
  over space and time
- **sc_growth**: the annual rate of growth of soft coral

::::

:::

```{r}
#| label: synthetic landscape config
```

2. define the spatial domain

```{r}
#| label: synthetic landscape spatial domain
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

3. create the synthetic landscape

```{r}
#| label: synthetic landscape benthos reefs
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

4. inspect the synthetic data

```{r}
#| label: benthods reefs pts show
#| results: markup
#| eval: true
#| echo: true
#| cache: false
benthos_reefs_pts <- readRDS(file = paste0(
  data_path,
  "synthetic/benthos_reefs_pts.rds"
))
benthos_reefs_pts |> head()
```

5. convert the synthetic data to an sf object and convert responses to
   a natural scale

```{r}
#| label: synthetic landscape benthos reefs response scale
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

5. visualise the spatio-temporal pattern of each response and covariate

::: {.panel-tabset}

### HCC

```{r}
#| label: plot benthos reefs HCC
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: false
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = HCC, color = HCC)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### SC

```{r}
#| label: plot benthos reefs SC
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: false
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = SC, color = SC)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### MA

```{r}
#| label: plot benthos reefs MA
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: false
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = MA, color = MA)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### CYC

```{r}
#| label: plot benthos reefs CYC
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: false
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = CYC, color = CYC)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### DHW

```{r}
#| label: plot benthos reefs DHW
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: false
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = DHW, color = DHW)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### OTHER

```{r}
#| label: plot benthos reefs OTHER
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: false
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = OTHER, color = OTHER)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```
:::

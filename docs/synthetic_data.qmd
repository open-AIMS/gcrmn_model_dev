---
title: "Comparing model types - synthetic data"
author: "Murray Logan"
date: today
date-format: "DD/MM/YYYY"
format:
  html:
    ## Format
    theme: [default, resources/style.scss]
    css: resources/style.css
    html-math-method: mathjax
    ## Table of contents
    toc: true
    toc-float: true
    ## Numbering
    number-sections: true
    number-depth: 3
    ## Layout
    page-layout: full
    fig-caption-location: "bottom"
    fig-align: "center"
    fig-width: 4
    fig-height: 4
    fig-dpi: 72
    tbl-cap-location: top
    ## Code
    code-fold: false
    code-tools: true
    code-summary: "Show the code"
    code-line-numbers: true
    code-block-border-left: "#ccc"
    code-copy: true
    highlight-style: atom-one
    ## Execution
    execute:
      echo: true
      #cache: true
    ## Rendering
    embed-resources: true
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
  tbl-title: '**Table**'
  tbl-labels: arabic
engine: knitr
## execute: 
##   cache: true
output_dir: "docs"
documentclass: article
fontsize: 12pt
mainfont: Arial
mathfont: LiberationMono
monofont: DejaVu Sans Mono
classoption: a4paper
bibliography: resources/references.bib
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(
    cache.lazy = FALSE,
    tidy = "styler"
)
## allow indented chunks
assignInNamespace(".sep.label",
  "^\\ *(#|--)+\\s*(@knitr|----+)(.*?)-*\\s*$",
    ns = "knitr"
)
knitr::read_chunk("../R/synthetic_data.R")
```
## Purpose

This page documents the production of numerous synthetic data sets
that are to be used to compare the performances of various models that
are candidates for GCRMN. Each synthetic dataset is intended to
represent a unique modelling challenge. The following table summarises
the statistical challenge and the path of the synthetic dataset
designed to represent this issue.

| Statistical challenge                             | File path                                |
|---------------------------------------------------|------------------------------------------|
| Replacing poor sites with good sites              | `synthetic/benthos_fixed_locs_obs_1.rds` |
| Replacing poor sites with good sites (small data) | `synthetic/benthos_fixed_locs_obs_2.rds` |
| Gaps in a temporal series of some sites           | `synthetic/benthos_fixed_locs_obs_2.rds` |
| Gaps in a temporal series of all sites            | `synthetic/benthos_fixed_locs_obs_2.rds` |
| Use of covariates                                 | `synthetic/benthos_fixed_locs_obs_2.rds` |

## Preparations

The bulk of the heavy lifting is performed by the `synthos` package.
This package can be installed by issuing the following:

```{r}
#| label: install synthos
#| results: markup
#| eval: false
#| echo: true
#| cache: false
remotes::install_github("open-AIMS/synthos")
```

Load the necessary R libraries

```{r}
#| label: synthetic libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false
```

Establish the global environment and paths

```{r}
#| label: synthetic global parameters
#| results: hide
#| eval: true
#| echo: true
#| cache: false
```

## Generate synthetic landscape

1. create a list of configuration parameters

::: {.columns}
:::: {.column width="50%"}
- **seed**: a random seed to use for the stoichastic processes
- **crs**: coordinate reference system to apply to the spatial domain
- **model**: the covariate model to use. The following models are
  supported: "Sph", "Exp", "Gau", "Lin", "Mat", "Ste", "Pen", "Hug",
  "Hol", "Cor", "Sphlin", "Sphexp", "Sphgaus", "Sphmat", "Sphste",
  "Sphpen", "Sphhug", "Sphhol", "Sphcor"
- **psill**: partial sill represents the variance explained by the spatial
  structure. It is the difference between the total sill (the
  asymptotic value of the variogram) and the _nugget_.In a variogram,
  the _psill_ is the plateau value that the variogram reaches as the
  distance increases.
- **range**: the distance at which spatial correlation becomes negligible.
  Beyond this distance, the variogram reaches the sill, and points are
  considered spatially uncorrelated. It defines the spatial extent of
  the influence of one location on another.
- **nugget**: represents the variance at zero distance (the y-intercept of
  the variogram). It accounts for measurement error or spatial
  variability at scales smaller than the sampling resolution. A
  nonzero _nugget_ indicates that there is variability that cannot be
  explained by the spatial model.
- **alpha**: controls the smoothness of the spatial field.
  Larger values of ~alpha~ result in smoother spatial fields, while
  smaller values allow for rougher fields. In the context of SPDEs,
  _alpha_ is related to the order of the differential operator used to
  define the spatial process.
::::

:::: {.column width="50%"}
- **kappa**: controls the spatial scale or range of the spatial
  process. It determines how quickly spatial correlation decays with
  distance. Smaller values of _kappa_ correspond to larger spatial
  ranges (more extended correlation), while larger values correspond
  to shorter spatial ranges (localized correlation). In SPDE-based
  models, _kappa_ is used to parameterize the precision matrix
  of the spatial field.
- **variance**: is used to calculate the precision of the Mat√©rn 
- **patch_threshold**: patch_threshold: a numeric representing the
  threshold below which the field is masked away to leave only the
  patches
- **reef_width**: representing half the width of a ribbon representing
  the reef that is centered on the outline of the patch
- **years**: a sequence of years
- **dhw_weight**: relative importance of degree heating weeks (how
  much to weight the effects of dhw when calculating cover)
- **cyc_weight**: relative importance of cyclones (how much to weight
  the effects of cyclones when calculating cover)
- **other_weight**: relative importance of other disturbances (how
  much to weight the effects of other disturbances when calculating
  cover) 
- **hcc_cover_range**: the range of Hard Coral Cover to be observed
  over space and time
- **hcc_growth**: the annual rate of growth of hard coral
- **sc_cover_range**: the range of Soft Coral Cover to be observed
  over space and time
- **sc_growth**: the annual rate of growth of soft coral

::::

:::

```{r}
#| label: synthetic landscape config
```

2. define the spatial domain

```{r}
#| label: synthetic landscape spatial domain
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

3. create the synthetic landscape

```{r}
#| label: synthetic landscape benthos reefs
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

4. inspect the synthetic data

```{r}
#| label: benthods reefs pts show
#| results: markup
#| eval: true
#| echo: true
#| cache: false
benthos_reefs_pts <- readRDS(file = paste0(
  data_path,
  "synthetic/benthos_reefs_pts.rds"
))
benthos_reefs_pts |> head()
```

5. convert the synthetic data to an sf object and convert responses to
   a natural scale

```{r}
#| label: synthetic landscape benthos reefs response scale
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

5. visualise the spatio-temporal pattern of each response and covariate

::: {.panel-tabset}

### HCC

```{r}
#| label: plot benthos reefs HCC
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: true
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = HCC, color = HCC)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### SC

```{r}
#| label: plot benthos reefs SC
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: true
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = SC, color = SC)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### MA

```{r}
#| label: plot benthos reefs MA
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: true
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = MA, color = MA)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### CYC

```{r}
#| label: plot benthos reefs CYC
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: true
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = CYC, color = CYC)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### DHW

```{r}
#| label: plot benthos reefs DHW
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: true
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = DHW, color = DHW)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

### OTHER

```{r}
#| label: plot benthos reefs OTHER
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: true
benthos_reefs_sf <- readRDS(file = paste0(data_path, "synthetic/benthos_reefs_sf.rds"))
benthos_reefs_sf |>
    ggplot() +
    geom_sf(aes(fill = OTHER, color = OTHER)) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```
:::

6. visualise the temporal trend in each of the responses and covariates marginalised
   over space

::: {.panel-tabset}

### HCC

```{r}
#| label: plot benthos reefs HCC part2
#| results: markup
#| eval: true
#| echo: true
#| cache: true
benthos_reefs_sf |>
    st_drop_geometry() |>
    group_by(Year) |>
    summarise(HCC = mean(HCC)) |>
    ggplot() +
    geom_line(aes(x = Year, y = HCC)) +
    theme_bw()
```

### SC

```{r}
#| label: plot benthos reefs SC part2
#| results: markup
#| eval: true
#| echo: true
#| cache: true
benthos_reefs_sf |>
    st_drop_geometry() |>
    group_by(Year) |>
    summarise(SC = mean(SC)) |>
    ggplot() +
    geom_line(aes(x = Year, y = SC)) +
    theme_bw()
```
### MA

```{r}
#| label: plot benthos reefs MA part2
#| results: markup
#| eval: true
#| echo: true
#| cache: true
benthos_reefs_sf |>
    st_drop_geometry() |>
    group_by(Year) |>
    summarise(MA = mean(MA)) |>
    ggplot() +
    geom_line(aes(x = Year, y = MA)) +
    theme_bw()
```
### CYC

```{r}
#| label: plot benthos reefs CYC part2
#| results: markup
#| eval: true
#| echo: true
#| cache: true
benthos_reefs_sf |>
    st_drop_geometry() |>
    group_by(Year) |>
    summarise(CYC = mean(CYC)) |>
    ggplot() +
    geom_line(aes(x = Year, y = CYC)) +
    theme_bw()
```
### DHW

```{r}
#| label: plot benthos reefs DHW part2
#| results: markup
#| eval: true
#| echo: true
#| cache: true
benthos_reefs_sf |>
    st_drop_geometry() |>
    group_by(Year) |>
    summarise(DHW = mean(DHW)) |>
    ggplot() +
    geom_line(aes(x = Year, y = DHW)) +
    theme_bw()
```

### OTHER

```{r}
#| label: plot benthos reefs OTHER part2
#| results: markup
#| eval: true
#| echo: true
#| cache: true
benthos_reefs_sf |>
    st_drop_geometry() |>
    group_by(Year) |>
    summarise(OTHER = mean(OTHER)) |>
    ggplot() +
    geom_line(aes(x = Year, y = OTHER)) +
    theme_bw()
```
:::

## Simulate a fixed site sampling design

1. select a set of sites to repeatedly sample

- **n_locs**: number of locations (e.g. reefs)
- **n_sites**: number of sites within each location
- **seed**: random seed used in the random selection of locations and
  sites

```{r}
#| label: synthetic landscape benthos reefs locs
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

```{r}
#| label: temp
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 10
#| fig-height: 10
#| cache: true
benthos_fixed_locs_sf <- readRDS(file = paste0(
  data_path,
  "synthetic/benthos_fixed_locs_sf.rds"
))
head(benthos_fixed_locs_sf)
benthos_fixed_locs_sf |>
    ggplot() +
    geom_sf(aes(fill = plogis(HCC), color = plogis(HCC))) +
    facet_wrap(~Year) +
    scale_fill_viridis_c() +
    scale_color_viridis_c() +
    theme_bw()
```

2. generate the within site structural hierarchy (transects/photos and
   points)

::: {.columns}
:::: {.column width="50%"}
- **Number_of_transects_per_site**: number of transects per site
- **Depths**: depths to sample at
- **Number_of_frames_per_transect**: number of photo frames per transect
- **Points_per_frame**: number of points on each photo
- **hcc_site_sigma**: HCC variability between sites within locations
  (logit scale)
- **hcc_transect_sigma**: HCC variability between transects within sites
  (logit scale)
- **hcc_sigma**: HCC stoichastic noise not attributed to anything else
  (logit scale)
::::

:::: {.column width="50%"}
- **sc_site_sigma**: SC variability between sites within locations
  (logit scale)
- **sc_transect_sigma**: SC variability between transects within sites
  (logit scale)
- **sc_sigma**: SC stoichastic noise not attributed to anything else
  (logit scale)
- **ma_site_sigma**: MA variability between sites within locations
  (logit scale)
- **ma_transect_sigma**: MA variability between transects within sites
  (logit scale)
- **ma_sigma**: MA stoichastic noise not attributed to anything else
  (logit scale)
::::
:::

```{r}
#| label: synthetic landscape benthos reefs locs obs
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

3. inspect the resulting dataset

```{r}
#| label: synthetic landscape benthos reefs locs obs show
#| results: markup
#| eval: true
#| echo: true
#| cache: false
benthos_fixed_locs_obs <- readRDS(file = paste0(
  data_path,
  "synthetic/benthos_fixed_locs_obs.rds"
))
benthos_fixed_locs_obs
```

4. join in the disturbances

```{r}
#| label: synthetic landscape benthos reefs locs obs disturb
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

```{r}
#| label: synthetic landscape benthos reefs locs obs disturb show
#| results: markup
#| eval: true
#| echo: true
#| cache: false
benthos_fixed_locs_obs_disturb <- readRDS(file = paste0(
  data_path,
  "synthetic/benthos_fixed_locs_obs_disturb.rds"
))
benthos_fixed_locs_obs_disturb |>
    as.data.frame() |>
    head()
```

## Specific data issue scenarios

The goal of the model comparisons exercise is to be able to evaluate
how well different models can accommodate different issues. These
issues include:

- situations in which certain monitored reefs are discontinued and
  replaced by alternative reefs for the rest of a time series. The
  most extreme form of this would be if a poor reef (a reef with very
  low cover) was replaced by a good reef (higher cover).
- it might be expected that the severity of replacing reefs would
  intensify with fewer reefs. To explore this, we will create a
  version of the reef replacement when the pool of reefs is smaller
- a common scenario is when there are gaps in time series. We will
  create a versions of the data where there are times when no samples
  are collected from selected reefs
- a more extreme version might be when there is a temporal gap in all
  sampled reefs
- using covariates (disturbances) to refine predictions in areas where
  there are no samples

::: {.panel-tabset}

## Replace a reef

```{r}
#| label: synthetic replace reefs
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

```{r}
#| label: synthetic replace reefs plot
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 8
#| fig-height: 6
#| cache: true
benthos_fixed_locs_obs_1 <- readRDS(
  file = paste0(data_path, "synthetic/benthos_fixed_locs_obs_1.rds")
)
benthos_fixed_locs_obs_1 |>
    ggplot() +
    geom_line(aes(
        y = HCC, x = Year, colour = Site,
        group = interaction(Site, Transect)
    )) +
    facet_wrap(~Reef) +
    theme_bw()
```

## Replace a reef (V2)

```{r}
#| label: synthetic replace reefs 2
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

```{r}
#| label: synthetic replace reefs plot 2
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 8
#| fig-height: 6
#| cache: true
benthos_fixed_locs_obs_2 <- readRDS(
  file = paste0(data_path, "synthetic/benthos_fixed_locs_obs_2.rds")
)
benthos_fixed_locs_obs_2 |>
    ggplot() +
    geom_line(aes(
        y = HCC, x = Year, colour = Site,
        group = interaction(Site, Transect)
    )) +
    facet_wrap(~Reef) +
    theme_bw()
```

## Temporal gap

```{r}
#| label: synthetic temporal gap
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

```{r}
#| label: synthetic temporal gap plot
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 8
#| fig-height: 6
#| cache: true
benthos_fixed_locs_obs_3 <- readRDS(
  file = paste0(data_path, "synthetic/benthos_fixed_locs_obs_3.rds")
)
benthos_fixed_locs_obs_3 |>
  dplyr::select(-MA, -SC) |>
  pivot_wider(
    id_cols = c(Reef, Longitude, Latitude, Site, Transect),
    names_from = Year,
    values_from = HCC
  ) |>
  pivot_longer(
    cols = -c(Reef, Longitude, Latitude, Site, Transect),
    names_to = "Year",
    values_to = "HCC"
  ) |> 
    ggplot() +
    geom_line(aes(
        y = HCC, x = Year, colour = Site,
        group = interaction(Site, Transect)
    )) +
    facet_wrap(~Reef) +
    theme_bw()
```

## Temporal gap 2

```{r}
#| label: synthetic temporal gap 2
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

```{r}
#| label: synthetic temporal gap plot 2
#| results: markup
#| eval: true
#| echo: true
#| fig-width: 8
#| fig-height: 6
#| cache: true
benthos_fixed_locs_obs_4 <- readRDS(
  file = paste0(data_path, "synthetic/benthos_fixed_locs_obs_4.rds")
)
yrs <- 1:12
benthos_fixed_locs_obs_4 |>
    complete(Year = yrs, nesting(Reef, Longitude, Latitude, Site, Transect)) |> 
    ggplot() +
    geom_line(aes(
        y = HCC, x = Year, colour = Site,
        group = interaction(Site, Transect)
    )) +
    facet_wrap(~Reef) +
    theme_bw()
```

## Covariates

```{r}
#| label: synthetic covariates
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```

:::
 
## Incomplete spatial domain

Another set of common issues that arrise is when an area is either
very sparsely represented (either spatially or temporally or both) or
has no observational data at all. In this section, we will divide the
full spatial domain into two sub-domains (Northern: latitudes above
-16 degrees and Southern: latitudes not above -16 degrees). Then we
will apply a more extensive sampling design to one of these
sub-domains and the other sub-domains will be represented by either
very few spatial locations or none at all. To summarise this, the
design will comprise:

| Data set   | Description                                                   |
|------------|---------------------------------------------------------------|
| dataset 10 | All Northern reefs                                            |
| dataset 11 | All Southern reefs                                            |
| dataset 12 | 25 Northern reefs, each with 2 sites and 5 transects per site |
| dataset 13 | 2 Southern reefs, each with 2 sites and 5 transects per site  |

Then in the modelling phase, we will fit a model for each of the above
and evaluate how well each can represent the following:

| Training set | To predict |
|--------------|------------|
| dataset 12   | dataset 11 |
| dataset 13   | dataset 10 |

```{r}
#| label: synthetic landscape benthos reefs subdomains
#| results: markup
#| eval: false
#| echo: true
#| cache: false
```




::: {.panel-tabset}
### All Northern reefs

```{r}
#| label: synthetic landscape benthos reefs northern
#| results: markup
#| eval: true
#| echo: true
#| cache: false
```
```{r}
#| label: synthetic landscape benthos reefs northern plot
#| results: markup
#| eval: true
#| echo: true
#| cache: false
#| fig-width: 8
#| fig-height: 6
benthos_reefs_pts_northern <- readRDS(
  file = paste0(data_path, "synthetic/benthos_reefs_pts_northern.rds")
)
benthos_reefs_pts_northern |>
  ggplot() +
  geom_sf(aes(fill = HCC, color = HCC)) +
  facet_wrap(~Year) +
  scale_fill_viridis_c() +
  scale_color_viridis_c() +
  theme_bw()
```
### All Southern reefs

```{r}
#| label: synthetic landscape benthos reefs northern
#| results: markup
#| eval: true
#| echo: true
#| cache: false
```

```{r}
#| label: synthetic landscape benthos reefs southern plot
#| results: markup
#| eval: true
#| echo: true
#| cache: false
#| fig-width: 8
#| fig-height: 6
benthos_reefs_pts_southern <- readRDS(
  file = paste0(data_path, "synthetic/benthos_reefs_pts_southern.rds")
)
benthos_reefs_pts_southern |>
  ggplot() +
  geom_sf(aes(fill = HCC, color = HCC)) +
  facet_wrap(~Year) +
  scale_fill_viridis_c() +
  scale_color_viridis_c() +
  theme_bw()
```

### Northern sampled reefs

```{r}
#| label: synthetic landscape benthos reefs northern sampled
#| results: markup
#| eval: true
#| echo: true
#| cache: false
```

```{r}
#| label: synthetic landscape benthos reefs northern sampled plot
#| results: markup
#| eval: true
#| echo: true
#| cache: false
#| fig-width: 8
#| fig-height: 6
spatial_domain <- st_geometry(
  st_multipoint(
    x = rbind(
      c(0, -10),
      c(3, -10),
      c(10, -20),
      c(1, -21),
      c(2, -16),
      c(0, -10)
    )
  )
) |>
  st_set_crs(4326) |>
  st_cast("POLYGON") 

split_line <- st_linestring(matrix(
  c(0, -16, 180, -16),
  nrow = 2, byrow = TRUE),
  dim = "XY") |>
  st_sfc(crs = st_crs(config$crs))

bbox_split <-
  spatial_domain |>
  st_bbox() |>
  st_as_sfc() |>
  lwgeom::st_split(split_line) |>
  st_collection_extract("POLYGON") |>
  st_as_sf() |>
  mutate(ypos = st_coordinates(st_centroid(x))[,"Y"]) |> 
  mutate(Half = ifelse(ypos == max(ypos), "Northern", "Southern"))

benthos_fixed_locs_northern_sf <- readRDS(
  file = paste0(data_path, "synthetic/benthos_fixed_locs_northern_sf.rds")
)
bbox_split |> st_intersection(spatial_domain) |>
  filter(Half == "Northern") |> 
  ggplot() +
  geom_sf() +
  geom_sf(data = benthos_fixed_locs_northern_sf,
    aes(fill = plogis(HCC), color = plogis(HCC))) +
  facet_wrap(~Year) +
  scale_fill_viridis_c() +
  scale_color_viridis_c() +
  theme_bw()
```

### Southern sampled reefs

```{r}
#| label: synthetic landscape benthos reefs southern sampled
#| results: markup
#| eval: true
#| echo: true
#| cache: false
```

```{r}
#| label: synthetic landscape benthos reefs southern sampled plot
#| results: markup
#| eval: true
#| echo: true
#| cache: false
#| fig-width: 8
#| fig-height: 6
spatial_domain <- st_geometry(
  st_multipoint(
    x = rbind(
      c(0, -10),
      c(3, -10),
      c(10, -20),
      c(1, -21),
      c(2, -16),
      c(0, -10)
    )
  )
) |>
  st_set_crs(4326) |>
  st_cast("POLYGON") 

split_line <- st_linestring(matrix(
  c(0, -16, 180, -16),
  nrow = 2, byrow = TRUE),
  dim = "XY") |>
  st_sfc(crs = st_crs(config$crs))

bbox_split <-
  spatial_domain |>
  st_bbox() |>
  st_as_sfc() |>
  lwgeom::st_split(split_line) |>
  st_collection_extract("POLYGON") |>
  st_as_sf() |>
  mutate(ypos = st_coordinates(st_centroid(x))[,"Y"]) |> 
  mutate(Half = ifelse(ypos == max(ypos), "Northern", "Southern"))

benthos_fixed_locs_southern_sf <- readRDS(
  file = paste0(data_path, "synthetic/benthos_fixed_locs_southern_sf.rds")
)
bbox_split |> st_intersection(spatial_domain) |>
  filter(Half == "Southern") |> 
  ggplot() +
  geom_sf() +
  geom_sf(data = benthos_fixed_locs_southern_sf,
    aes(fill = plogis(HCC), color = plogis(HCC))) +
  facet_wrap(~Year) +
  scale_fill_viridis_c() +
  scale_color_viridis_c() +
  theme_bw()
```

:::


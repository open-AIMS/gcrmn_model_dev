name: Build and render analyses

on:
  workflow_dispatch:
#  pull_request:
#  push:
#    branches: ['release']

jobs:
  build-analyses:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    name: ${{ matrix.config.r }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - { r: '4.4.1' }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0  # ensure that more than the last commit is checked out so that we can get time stamps
      # Restore the timestamps - I am going to try to use these to work out what is new and what is not    
      - name: Restore Timestamps
        uses: chetan/git-restore-mtime-action@v1

      # Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev make

      # install graphviz
      - name: Install Graphviz
        run: sudo apt-get install graphviz

      # install R
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.R }}

      - name: Repos
        run: |
          cat("\noptions(repos=c(stan='https://mc-stan.org/r-packages/',CRAN ='https://cloud.r-project.org'))\n", file = "~/.Rprofile", append = TRUE)
        shell: Rscript {0}
        
      ## Install R packages
      - name: install R packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          packages: |
            any::rmarkdown
            any::quarto
            any::tidyverse
            any::sf
            any::DHARMa
            any::glmmTMB
            any::patchwork
            any::brms
            any::knitr
            any::simstudy
            any::HDInterval
            any::rstan
            any::bayesplot
            any::gbm
            any::dbarts
            any::posterior
            any::remotes
            any::targets
            any::tidybayes
            any::graph
            any::Rgraphviz
            stan-dev/cmdstanr
            jmgirard/standist

      - name: Install INLA
        run: |
          Rscript -e "install.packages('INLA',repos=c(getOption('repos'),INLA='https://inla.r-inla-download.org/R/stable'), dep=TRUE)"

          Rscript -e "remotes::install_github('jmgirard/standist')"

      ## Install more R packages
      - name: install more R packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          packages: |
            open-AIMS/synthos

      - name: Install CmdStan
        shell: Rscript {0}
        run: |
          cmdstanr::check_cmdstan_toolchain(fix = TRUE)
          cmdstanr::install_cmdstan(cores = parallel::detectCores())
          #install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
          #cmdstanr::check_cmdstan_toolchain(fix = TRUE)
          #cmdstanr::install_cmdstan(cores = 2)
          #version <- "2.35.0"
          #url <- sprintf("https://github.com/stan-dev/cmdstan/releases/download/v%s/cmdstan-%s.tar.gz", version, version)
          #cmdstanr::install_cmdstan(cores = 2, release_url = url)        
          #cmdstanr::check_cmdstan_toolchain(fix = TRUE)
          #cmdstanr::install_cmdstan(cores = 2)
          #cmdstan <- file.path(Sys.getenv("RUNNER_TEMP"), "cmdstan")
          #file.rename(cmdstanr::cmdstan_path(), cmdstan)
          #lines <- paste0("\nCMDSTAN=", cmdstan, "\n")
          #cat(lines, file = "~/.Renviron", append = TRUE)
          cmdstanr:::get_cmdstan_flags("STANCFLAGS")
          cmdstanr::cmdstanr_example()


      # render tutorials
      - name: Make tutorials
        run: |
          #mkdir ~/tmp
          #echo "library(quarto); quarto_render(\"tut/index.qmd\")" | R --no-save --no-restore;
          make -i run_R